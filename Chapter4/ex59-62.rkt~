;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname ex59-62) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))

(require 2htdp/image)
(require 2htdp/universe)

; A TrafficLight is one of the following Strings:
; – "red"
; – "green"
; – "yellow"
; interpretation the three strings represent the three 
; possible states that a traffic light may assume 

(define WIDTH 300)
(define HEIGHT 300)
(define SN (empty-scene WIDTH HEIGHT))
(define RED (bitmap/file "../assets/light-red.png"))
(define GREEN (bitmap/file "../assets/light-green.png"))
(define YELLOW (bitmap/file "../assets/light-yellow.png"))

; TrafficLight -> TrafficLight
; yields the next state, given current state cs
(define (tl-next cs) 
    (cond 
     [(string=? "red" cs) "green"]
     [(string=? "green" cs) "yellow"]
     [(string=? "yellow" cs) "red"]))
 
; TrafficLight -> Image
; renders the current state cs as an image
(define (tl-render cs)
  (place-image 
    (cond 
     [(string=? "red" cs) RED]
     [(string=? "green" cs) GREEN]
     [(string=? "yellow" cs) YELLOW])
    (/ WIDTH 2)
    (/ HEIGHT 2)
    SN)) 

(tl-render "green")

; TrafficLight -> TrafficLight
; simulates a clock-based American traffic light
(define (traffic-light-simulation initial-state)
  (big-bang initial-state
    [to-draw tl-render]
    [on-tick tl-next 1]))
